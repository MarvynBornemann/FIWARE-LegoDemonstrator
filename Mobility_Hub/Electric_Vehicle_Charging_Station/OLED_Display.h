#pragma once

#include <Arduino.h>

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)

const unsigned char Euro_bits[] PROGMEM = {// 'Euro', 16x16px
    0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x03, 0xfc, 0x06, 0x00, 0x0e, 0x00, 0x3f, 0xc0, 0x0c, 0x00, 
    0x0c, 0x00, 0x3f, 0xc0, 0x0e, 0x00, 0x06, 0x00, 0x03, 0xfc, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00
};

const unsigned char My_bits[] PROGMEM = {// 'My', 10x16px
    0x00, 0x00, 0x00, 0x00, 0x61, 0x80, 0x61, 0x80, 0x61, 0x80, 0x61, 0x80, 0x61, 0x80, 0x61, 0x80, 
    0x61, 0x80, 0x73, 0x80, 0x7f, 0x00, 0x6c, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00
};

const unsigned char ElectricChargingSign[] PROGMEM = {// 'ElectricChargingSign, 64x64px
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x60, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x60, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x60, 0x00, 
	0x00, 0x0f, 0xff, 0xf8, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xfe, 0x00, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xff, 0x00, 0xff, 0xfe, 0x00, 0x00, 0xe0, 0x00, 0x03, 0x80, 0xc0, 0x0e, 0x00, 
	0x00, 0xe0, 0x00, 0x03, 0x80, 0xc0, 0x0e, 0x00, 0x00, 0xcf, 0xff, 0xf9, 0x80, 0xc7, 0x8e, 0x00, 
	0x00, 0xcf, 0xff, 0xf9, 0x80, 0xef, 0xce, 0x00, 0x00, 0xce, 0x00, 0x39, 0x80, 0xe7, 0xdc, 0x00, 
	0x00, 0xce, 0x00, 0x39, 0x80, 0x70, 0x1c, 0x00, 0x00, 0xce, 0x00, 0x39, 0x80, 0x70, 0x18, 0x00, 
	0x00, 0xce, 0x00, 0x39, 0x80, 0x70, 0x38, 0x00, 0x00, 0xce, 0x00, 0x39, 0x80, 0x38, 0x38, 0x00, 
	0x00, 0xce, 0x00, 0x39, 0x80, 0x3c, 0xf0, 0x00, 0x00, 0xce, 0x00, 0x39, 0x80, 0x1f, 0xe0, 0x00, 
	0x00, 0xcf, 0xff, 0xf9, 0x87, 0x8f, 0xc0, 0x00, 0x00, 0xcf, 0xff, 0xf9, 0x8f, 0xc3, 0x80, 0x00, 
	0x00, 0xc7, 0xff, 0xf1, 0x9f, 0xe3, 0x80, 0x00, 0x00, 0xc0, 0x00, 0x01, 0x9c, 0xe3, 0x80, 0x00, 
	0x00, 0xc0, 0x00, 0x01, 0x9c, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x00, 0x01, 0x9c, 0x63, 0x80, 0x00, 
	0x00, 0xc0, 0x00, 0x01, 0x9c, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x0c, 0x01, 0x9c, 0x63, 0x80, 0x00, 
	0x00, 0xc0, 0x1c, 0x01, 0x9c, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x18, 0x01, 0x9c, 0x63, 0x80, 0x00, 
	0x00, 0xc0, 0x38, 0x01, 0x9c, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x78, 0x01, 0xb8, 0x63, 0x80, 0x00, 
	0x00, 0xc0, 0x7f, 0x01, 0xf8, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x7f, 0x01, 0xf0, 0x63, 0x80, 0x00, 
	0x00, 0xc0, 0x0e, 0x01, 0x80, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x0e, 0x01, 0x80, 0x63, 0x80, 0x00, 
	0x00, 0xc0, 0x1c, 0x01, 0x80, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x1c, 0x01, 0x80, 0x63, 0x80, 0x00, 
	0x00, 0xc0, 0x08, 0x01, 0x80, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x00, 0x01, 0x80, 0x63, 0x80, 0x00, 
	0x00, 0xc0, 0x00, 0x01, 0x80, 0x63, 0x80, 0x00, 0x00, 0xc0, 0x00, 0x01, 0x80, 0x63, 0x80, 0x00, 
	0x00, 0xe0, 0x00, 0x03, 0x80, 0x63, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xff, 0xe0, 0x3e, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 0x08, 0x00, 0x00, 
	0x07, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 
	0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 
	0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Hourglass [] PROGMEM = {// 'Hourglass, 32x32px
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x20, 0x04, 0x00, 
	0x00, 0x20, 0x04, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 
	0x00, 0x10, 0x08, 0x00, 0x00, 0x0b, 0xd0, 0x00, 0x00, 0x05, 0xa0, 0x00, 0x00, 0x02, 0x40, 0x00, 
	0x00, 0x02, 0x40, 0x00, 0x00, 0x05, 0xa0, 0x00, 0x00, 0x0b, 0xd0, 0x00, 0x00, 0x17, 0xe8, 0x00, 
	0x00, 0x17, 0xe8, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x2f, 0xf4, 0x00, 0x00, 0x2f, 0xf4, 0x00, 
	0x00, 0x20, 0x04, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Car [] PROGMEM = {// 'Car, 29x29px
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0x00, 
	0x0f, 0x80, 0x0f, 0x80, 0x0e, 0x00, 0x03, 0x80, 0x0e, 0x00, 0x03, 0x80, 0x1c, 0x00, 0x03, 0xc0, 
	0x1c, 0x00, 0x01, 0xc0, 0x3c, 0x00, 0x01, 0xc0, 0x7f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xf8, 0xe3, 0xff, 0xfe, 0x38, 0xe3, 0xff, 0xfc, 0x38, 0xe3, 0xff, 0xfc, 0x38, 
	0xe3, 0xff, 0xfe, 0x38, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0xc0, 
	0x3c, 0x00, 0x01, 0xe0, 0x3c, 0x00, 0x01, 0xe0, 0x3c, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};


class OLED_Display
{
    private:
        Adafruit_SSD1306* oledDisplay;

        int sdaPin;
        int sclPin;
        int screenAdress;

        void prepare();

    public:
        OLED_Display(int sdaPin, int sclPin, int screenAdress = 0x3C);
        ~OLED_Display();
        
        void setup();

        void displayElectricChargingSign(int numberOfFreeParkingLots);
        void displayElectricChargingProgress(bool parkingLot1_available, bool parkingLot2_available, int remainingTimeForFullCharge1, int remainingTimeForFullCharge2);
};